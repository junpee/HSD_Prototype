/** Generated by AWAG ver.2.0.0.GIT-e0917bf.BUILD-20170421-1451+0900 */

package com.ibm.salessample.logic.impl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Optional;

import javax.ejb.Stateless;
import javax.inject.Inject;

import com.ibm.jp.awag2.common.dao.DAOBase.SelectWhereOperator;
import com.ibm.jp.awag2.common.dao.DAOParameter;
import com.ibm.jp.awag2.common.entity.JoinEntity;
import com.ibm.jp.awag2.common.logic.ServiceAppException;
import com.ibm.jp.awag2.common.logic.ServiceBase;
import com.ibm.jp.awag2.common.logic.ServiceDBException;
import com.ibm.salessample.dto.CreateCustomerInputDTO;
import com.ibm.salessample.dto.CreateCustomerOutputDTO;
import com.ibm.salessample.dto.CreateCustomerInputDTOApprovelog;
import com.ibm.salessample.dao.impl.CUSTOMERCustomizeDAO;
import com.ibm.salessample.entity.CUSTOMER;
import com.ibm.salessample.entity.CUSTOMERPK;
import com.ibm.salessample.dao.impl.APPROVELOGCustomizeDAO;
import com.ibm.salessample.entity.APPROVELOG;
import com.ibm.salessample.entity.APPROVELOGPK;

/**
* お客様作成 サービスクラス（CreateCustomer）
* お客様作成
*/ 
@Stateless
public class CreateCustomerService extends ServiceBase {


	/** DAOパラメーターマップのキー（CUSTOMER） */
	protected static final String DAO_PARAM_MAP_KEY_CUSTOMER = "customer";


	/** DAOパラメーターマップのキー（CUSTOMERのJoinList） */
	protected static final String DAO_PARAM_MAP_KEY_CUSTOMER_JOIN = "joinEntityListForCUSTOMER";

	/** CUSTOMERテーブルDAO */
	@Inject
	protected CUSTOMERCustomizeDAO customerDao;
	
	/**
	 * DBアクセス前の入力データ処理を行う。主にInputDTOからDAOParameterへの詰替処理を行う。
	 * @param CreateCustomerInputDTO InputDTO
	 * @return persistメソッドへの持ち回りデータを格納したMapオブジェクト
	 * @throws ServiceDBException
	 * @throws ServiceAppException
	 */
	protected Map<String, Object> processInput(CreateCustomerInputDTO createcustomerinputdto)  throws ServiceDBException, ServiceAppException {
		
		Map<String, Object> daoParameterMap = new HashMap<>();

		// InputDTOからDAOParameterへの詰替

		CUSTOMER customerTmp = new CUSTOMER();
		if (createcustomerinputdto != null) customerTmp.setCUSTOMERID(createcustomerinputdto.getCustomerid());
		if (createcustomerinputdto != null) customerTmp.setNAMEEN(createcustomerinputdto.getNameen());
		if (createcustomerinputdto != null) customerTmp.setNAME(createcustomerinputdto.getName());
		if (createcustomerinputdto != null) customerTmp.setINCHARGEID(createcustomerinputdto.getInchargeid());
		if (createcustomerinputdto != null) customerTmp.setREGISTEREDDATE(createcustomerinputdto.getRegistereddate());
		if (createcustomerinputdto != null) customerTmp.setHIRAGANA(createcustomerinputdto.getHiragana());
		if (createcustomerinputdto != null) customerTmp.setKATAKANA(createcustomerinputdto.getKatakana());
		if (createcustomerinputdto != null) customerTmp.setDESCRIPTION(createcustomerinputdto.getDescription());
		if (createcustomerinputdto != null) customerTmp.setISIN(createcustomerinputdto.getIsin());
		if (createcustomerinputdto != null) customerTmp.setHOUJINNO(createcustomerinputdto.getHoujinno());
		if (createcustomerinputdto != null) customerTmp.setRANK(createcustomerinputdto.getRank());
		if (createcustomerinputdto != null) customerTmp.setCUSTCLASS1(createcustomerinputdto.getCustclass1());
		if (createcustomerinputdto != null) customerTmp.setCUSTCLASS2(createcustomerinputdto.getCustclass2());
		if (createcustomerinputdto != null) customerTmp.setCHECKBOX(createcustomerinputdto.getCheckbox());

		APPROVELOG approvelogTmpWrap = null;
		if (createcustomerinputdto != null && createcustomerinputdto.getApprovelog() != null) approvelogTmpWrap = new APPROVELOG();
		CreateCustomerInputDTOApprovelog createcustomerinputdtoapprovelog = null;
		if (createcustomerinputdto != null && createcustomerinputdto.getApprovelog() != null) createcustomerinputdtoapprovelog = createcustomerinputdto.getApprovelog();
			if (createcustomerinputdtoapprovelog != null) approvelogTmpWrap.setCUSTOMERID(createcustomerinputdtoapprovelog.getCustomerid());
		customerTmp.setAPPROVELOG(approvelogTmpWrap);
		daoParameterMap.put(DAO_PARAM_MAP_KEY_CUSTOMER,  customerTmp);

		return daoParameterMap;
	}				
			
	/**
	 * DBアクセス処理を行う。
	 * @param daoParameterMap processInputメソッドからの持ち回りデータを格納したMapオブジェクト
	 * @return processOutputメソッドへの持ち回りデータを格納したMapオブジェクト
	 * @throws ServiceDBException
	 * @throws ServiceAppException
	 */
	 	protected Map<String, Object> persist(Map<String, Object> daoParameterMap)  throws ServiceDBException, ServiceAppException  {

		// DAO呼び出し
		Map<String, Object> resultMap = new HashMap<>();
										
		// DAOパラメータの取得
		CUSTOMER customer = (CUSTOMER) daoParameterMap.get(DAO_PARAM_MAP_KEY_CUSTOMER);

		// DAO呼び出し
		customerDao.insert(customer);

		return resultMap;
	}
	
	/**
	 * DBアクセス後の出力データ処理を行う。主にDBアクセス結果からOutputDTOへの詰替処理を行う。
	 * @param resultMap persistメソッドからの持ち回りデータを格納したMapオブジェクト
	 * @return OutputDTO
	 * @throws ServiceDBException
	 * @throws ServiceAppException
	 */
	 	protected CreateCustomerOutputDTO processOutput(Map<String, Object> resultMap)  throws ServiceDBException, ServiceAppException {

		return new CreateCustomerOutputDTO();
		
	}}