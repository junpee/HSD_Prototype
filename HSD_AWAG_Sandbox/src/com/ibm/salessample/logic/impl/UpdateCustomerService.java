/** Generated by AWAG ver.2.0.0.GIT-e0917bf.BUILD-20170421-1451+0900 */

package com.ibm.salessample.logic.impl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Optional;

import javax.ejb.Stateless;
import javax.inject.Inject;

import com.ibm.jp.awag2.common.dao.DAOBase.SelectWhereOperator;
import com.ibm.jp.awag2.common.dao.DAOParameter;
import com.ibm.jp.awag2.common.entity.JoinEntity;
import com.ibm.jp.awag2.common.logic.ServiceAppException;
import com.ibm.jp.awag2.common.logic.ServiceBase;
import com.ibm.jp.awag2.common.logic.ServiceDBException;
import com.ibm.salessample.dto.UpdateCustomerInputDTO;
import com.ibm.salessample.dto.UpdateCustomerOutputDTO;
import com.ibm.salessample.dao.impl.CUSTOMERCustomizeDAO;
import com.ibm.salessample.entity.CUSTOMER;
import com.ibm.salessample.entity.CUSTOMERPK;

/**
* お客様更新 サービスクラス（UpdateCustomer）
* お客様更新
*/ 
@Stateless
public class UpdateCustomerService extends ServiceBase {


	/** DAOパラメーターマップのキー（CUSTOMER） */
	protected static final String DAO_PARAM_MAP_KEY_CUSTOMER = "customer";


	/** DAOパラメーターマップのキー（CUSTOMERのJoinList） */
	protected static final String DAO_PARAM_MAP_KEY_CUSTOMER_JOIN = "joinEntityListForCUSTOMER";

	/** CUSTOMERテーブルDAO */
	@Inject
	protected CUSTOMERCustomizeDAO customerDao;
	
	/**
	 * DBアクセス前の入力データ処理を行う。主にInputDTOからDAOParameterへの詰替処理を行う。
	 * @param UpdateCustomerInputDTO InputDTO
	 * @return persistメソッドへの持ち回りデータを格納したMapオブジェクト
	 * @throws ServiceDBException
	 * @throws ServiceAppException
	 */
	protected Map<String, Object> processInput(UpdateCustomerInputDTO updatecustomerinputdto)  throws ServiceDBException, ServiceAppException {
		
		Map<String, Object> daoParameterMap = new HashMap<>();

		// InputDTOからDAOParameterへの詰替

		CUSTOMER customerTmp = new CUSTOMER();
		if (updatecustomerinputdto != null) customerTmp.setCUSTOMERID(updatecustomerinputdto.getCustomerid());
		if (updatecustomerinputdto != null) customerTmp.setNAMEEN(updatecustomerinputdto.getNameen());
		if (updatecustomerinputdto != null) customerTmp.setNAME(updatecustomerinputdto.getName());
		if (updatecustomerinputdto != null) customerTmp.setINCHARGEID(updatecustomerinputdto.getInchargeid());
		if (updatecustomerinputdto != null) customerTmp.setREGISTEREDDATE(updatecustomerinputdto.getRegistereddate());
		if (updatecustomerinputdto != null) customerTmp.setHIRAGANA(updatecustomerinputdto.getHiragana());
		if (updatecustomerinputdto != null) customerTmp.setKATAKANA(updatecustomerinputdto.getKatakana());
		if (updatecustomerinputdto != null) customerTmp.setDESCRIPTION(updatecustomerinputdto.getDescription());
		if (updatecustomerinputdto != null) customerTmp.setISIN(updatecustomerinputdto.getIsin());
		if (updatecustomerinputdto != null) customerTmp.setHOUJINNO(updatecustomerinputdto.getHoujinno());
		if (updatecustomerinputdto != null) customerTmp.setRANK(updatecustomerinputdto.getRank());
		if (updatecustomerinputdto != null) customerTmp.setCUSTCLASS1(updatecustomerinputdto.getCustclass1());
		if (updatecustomerinputdto != null) customerTmp.setCUSTCLASS2(updatecustomerinputdto.getCustclass2());
		if (updatecustomerinputdto != null) customerTmp.setCHECKBOX(updatecustomerinputdto.getCheckbox());
		if (updatecustomerinputdto != null) customerTmp.setTIME(updatecustomerinputdto.getTime());
		daoParameterMap.put(DAO_PARAM_MAP_KEY_CUSTOMER,  customerTmp);

		return daoParameterMap;

	}				

	/**
	 * DBアクセス処理を行う。
	 * @param daoParameterMap processInputメソッドからの持ち回りデータを格納したMapオブジェクト
	 * @return processOutputメソッドへの持ち回りデータを格納したMapオブジェクト
	 * @throws ServiceDBException
	 * @throws ServiceAppException
	 */
	 	protected Map<String, Object> persist(Map<String, Object> daoParameterMap)  throws ServiceDBException, ServiceAppException  {

		// DAO呼び出し
		Map<String, Object> resultMap = new HashMap<>();
										
		// DAOパラメータの取得
		CUSTOMER customer = (CUSTOMER) daoParameterMap.get(DAO_PARAM_MAP_KEY_CUSTOMER);

		// DAO呼び出し
		customerDao.update(customer);

		return resultMap;
	}	

	/**
	 * DBアクセス後の出力データ処理を行う。主にDBアクセス結果からOutputDTOへの詰替処理を行う。
	 * @param resultMap persistメソッドからの持ち回りデータを格納したMapオブジェクト
	 * @return OutputDTO
	 * @throws ServiceDBException
	 * @throws ServiceAppException
	 */
	 	protected UpdateCustomerOutputDTO processOutput(Map<String, Object> resultMap)  throws ServiceDBException, ServiceAppException {

		return new UpdateCustomerOutputDTO();
		
	}}