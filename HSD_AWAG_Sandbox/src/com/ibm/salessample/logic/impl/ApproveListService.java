/** Generated by AWAG ver.2.0.0.GIT-e0917bf.BUILD-20170421-1451+0900 */

package com.ibm.salessample.logic.impl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Optional;

import javax.ejb.Stateless;
import javax.inject.Inject;

import com.ibm.jp.awag2.common.dao.DAOBase.SelectWhereOperator;
import com.ibm.jp.awag2.common.dao.DAOParameter;
import com.ibm.jp.awag2.common.entity.JoinEntity;
import com.ibm.jp.awag2.common.logic.ServiceAppException;
import com.ibm.jp.awag2.common.logic.ServiceBase;
import com.ibm.jp.awag2.common.logic.ServiceDBException;
import com.ibm.salessample.dto.ApproveListInputDTO;
import com.ibm.salessample.dto.ApproveListOutputDTO;
import com.ibm.salessample.dto.ApproveListInputDTOList;
import com.ibm.salessample.dto.ApproveListInputDTOStaff;
import com.ibm.salessample.dto.ApproveListInputDTOApprovelog;
import com.ibm.salessample.dao.impl.CUSTOMERCustomizeDAO;
import com.ibm.salessample.entity.CUSTOMER;
import com.ibm.salessample.entity.CUSTOMERPK;
import com.ibm.salessample.dao.impl.APPROVELOGCustomizeDAO;
import com.ibm.salessample.entity.APPROVELOG;
import com.ibm.salessample.entity.APPROVELOGPK;
import com.ibm.salessample.dto.ApproveListInputDTOList;

/**
* 一括承認 サービスクラス（ApproveList）
* 一括承認
*/ 
@Stateless
public class ApproveListService extends ServiceBase {


	/** DAOパラメーターマップのキー（CUSTOMER） */
	protected static final String DAO_PARAM_MAP_KEY_CUSTOMER = "customer";


	/** DAOパラメーターマップのキー（CUSTOMERのJoinList） */
	protected static final String DAO_PARAM_MAP_KEY_CUSTOMER_JOIN = "joinEntityListForCUSTOMER";

	/** CUSTOMERテーブルDAO */
	@Inject
	protected CUSTOMERCustomizeDAO customerDao;
	
	/**
	 * DBアクセス前の入力データ処理を行う。主にInputDTOからDAOParameterへの詰替処理を行う。
	 * @param ApproveListInputDTO InputDTO
	 * @return persistメソッドへの持ち回りデータを格納したMapオブジェクト
	 * @throws ServiceDBException
	 * @throws ServiceAppException
	 */
	protected Map<String, Object> processInput(ApproveListInputDTO approvelistinputdto)  throws ServiceDBException, ServiceAppException {
		
		Map<String, Object> daoParameterMap = new HashMap<>();

		// InputDTOからDAOParameterへの詰替


		List<CUSTOMER> customerTmpWrap = null;
		if (approvelistinputdto != null && approvelistinputdto.getList()  != null && !approvelistinputdto.getList().isEmpty()) customerTmpWrap = new ArrayList<>();
		if (approvelistinputdto.getList() != null && !approvelistinputdto.getList().isEmpty()) {
		for (ApproveListInputDTOList approvelistinputdtolist : approvelistinputdto.getList()) {
			CUSTOMER customerTmp = new CUSTOMER();	
			if (approvelistinputdtolist != null) customerTmp.setCUSTOMERID(approvelistinputdtolist.getCustomerid());
			if (approvelistinputdtolist != null) customerTmp.setNAMEEN(approvelistinputdtolist.getNameen());
			if (approvelistinputdtolist != null) customerTmp.setNAME(approvelistinputdtolist.getName());
			if (approvelistinputdtolist != null) customerTmp.setINCHARGEID(approvelistinputdtolist.getInchargeid());
			if (approvelistinputdtolist != null) customerTmp.setCHECKBOX(approvelistinputdtolist.getCheckbox());
			if (approvelistinputdtolist != null) customerTmp.setTIME(approvelistinputdtolist.getTime());

			APPROVELOG approvelogTmpWrap = null;
			if (approvelistinputdtolist != null && approvelistinputdtolist.getApprovelog() != null) approvelogTmpWrap = new APPROVELOG();
			ApproveListInputDTOApprovelog approvelistinputdtoapprovelog = null;
			if (approvelistinputdtolist != null && approvelistinputdtolist.getApprovelog() != null) approvelistinputdtoapprovelog = approvelistinputdtolist.getApprovelog();
				if (approvelistinputdtoapprovelog != null) approvelogTmpWrap.setCUSTOMERID(approvelistinputdtoapprovelog.getCustomerid());
				if (approvelistinputdtoapprovelog != null) approvelogTmpWrap.setCOMMENT(approvelistinputdtoapprovelog.getComment());
				if (approvelistinputdtoapprovelog != null) approvelogTmpWrap.setRANK(approvelistinputdtoapprovelog.getRank());
				if (approvelistinputdtoapprovelog != null) approvelogTmpWrap.setSTATUS(approvelistinputdtoapprovelog.getStatus());
				if (approvelistinputdtoapprovelog != null) approvelogTmpWrap.setFLAG(approvelistinputdtoapprovelog.getFlag());
				if (approvelistinputdtoapprovelog != null) approvelogTmpWrap.setVERSION(approvelistinputdtoapprovelog.getVersion());
			customerTmp.setAPPROVELOG(approvelogTmpWrap);
			customerTmpWrap.add(customerTmp);
		}
		}
		daoParameterMap.put(DAO_PARAM_MAP_KEY_CUSTOMER,  customerTmpWrap);

		return daoParameterMap;
	}				
				
	/**
	 * DBアクセス処理を行う。
	 * @param daoParameterMap processInputメソッドからの持ち回りデータを格納したMapオブジェクト
	 * @return processOutputメソッドへの持ち回りデータを格納したMapオブジェクト
	 * @throws ServiceDBException
	 * @throws ServiceAppException
	 */
	 	protected Map<String, Object> persist(Map<String, Object> daoParameterMap)  throws ServiceDBException, ServiceAppException  {

		// DAO呼び出し
		Map<String, Object> resultMap = new HashMap<>();
										
		// DAOパラメータの取得
		List<CUSTOMER> customer = (List<CUSTOMER>) daoParameterMap.get(DAO_PARAM_MAP_KEY_CUSTOMER);

		// DAO呼び出し
		customerDao.updateList(customer);

		return resultMap;
	}
	
	/**
	 * DBアクセス後の出力データ処理を行う。主にDBアクセス結果からOutputDTOへの詰替処理を行う。
	 * @param resultMap persistメソッドからの持ち回りデータを格納したMapオブジェクト
	 * @return OutputDTO
	 * @throws ServiceDBException
	 * @throws ServiceAppException
	 */
	 	protected ApproveListOutputDTO processOutput(Map<String, Object> resultMap)  throws ServiceDBException, ServiceAppException {

		return new ApproveListOutputDTO();
		
	}}