/** Generated by AWAG ver.2.0.0.GIT-e0917bf.BUILD-20170421-1451+0900 */

package com.ibm.salessample.logic.impl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Optional;

import javax.ejb.Stateless;
import javax.inject.Inject;

import com.ibm.jp.awag2.common.dao.DAOBase.SelectWhereOperator;
import com.ibm.jp.awag2.common.dao.DAOParameter;
import com.ibm.jp.awag2.common.entity.JoinEntity;
import com.ibm.jp.awag2.common.logic.ServiceAppException;
import com.ibm.jp.awag2.common.logic.ServiceBase;
import com.ibm.jp.awag2.common.logic.ServiceDBException;
import com.ibm.salessample.dto.UpdateContactInputDTO;
import com.ibm.salessample.dto.UpdateContactOutputDTO;
import com.ibm.salessample.dao.impl.CONTACTCustomizeDAO;
import com.ibm.salessample.entity.CONTACT;
import com.ibm.salessample.entity.CONTACTPK;

/**
* コンタクト履歴更新 サービスクラス（UpdateContact）
* コンタクト履歴更新
*/ 
@Stateless
public class UpdateContactService extends ServiceBase {


	/** DAOパラメーターマップのキー（CONTACT） */
	protected static final String DAO_PARAM_MAP_KEY_CONTACT = "contact";


	/** DAOパラメーターマップのキー（CONTACTのJoinList） */
	protected static final String DAO_PARAM_MAP_KEY_CONTACT_JOIN = "joinEntityListForCONTACT";

	/** CONTACTテーブルDAO */
	@Inject
	protected CONTACTCustomizeDAO contactDao;
	
	/**
	 * DBアクセス前の入力データ処理を行う。主にInputDTOからDAOParameterへの詰替処理を行う。
	 * @param UpdateContactInputDTO InputDTO
	 * @return persistメソッドへの持ち回りデータを格納したMapオブジェクト
	 * @throws ServiceDBException
	 * @throws ServiceAppException
	 */
	protected Map<String, Object> processInput(UpdateContactInputDTO updatecontactinputdto)  throws ServiceDBException, ServiceAppException {
		
		Map<String, Object> daoParameterMap = new HashMap<>();

		// InputDTOからDAOParameterへの詰替

		CONTACT contactTmp = new CONTACT();
		if (updatecontactinputdto != null) contactTmp.setCUSTOMERID(updatecontactinputdto.getCustomerid());
		if (updatecontactinputdto != null) contactTmp.setCONTACTID(updatecontactinputdto.getContactid());
		if (updatecontactinputdto != null) contactTmp.setINCHARGEID(updatecontactinputdto.getInchargeid());
		if (updatecontactinputdto != null) contactTmp.setDESCRIPTION(updatecontactinputdto.getDescription());
		if (updatecontactinputdto != null) contactTmp.setSALESCD(updatecontactinputdto.getSalescd());
		if (updatecontactinputdto != null) contactTmp.setOZZ(updatecontactinputdto.getOzz());
		if (updatecontactinputdto != null) contactTmp.setTIME(updatecontactinputdto.getTime());
		daoParameterMap.put(DAO_PARAM_MAP_KEY_CONTACT,  contactTmp);

		return daoParameterMap;

	}				

	/**
	 * DBアクセス処理を行う。
	 * @param daoParameterMap processInputメソッドからの持ち回りデータを格納したMapオブジェクト
	 * @return processOutputメソッドへの持ち回りデータを格納したMapオブジェクト
	 * @throws ServiceDBException
	 * @throws ServiceAppException
	 */
	 	protected Map<String, Object> persist(Map<String, Object> daoParameterMap)  throws ServiceDBException, ServiceAppException  {

		// DAO呼び出し
		Map<String, Object> resultMap = new HashMap<>();
										
		// DAOパラメータの取得
		CONTACT contact = (CONTACT) daoParameterMap.get(DAO_PARAM_MAP_KEY_CONTACT);

		// DAO呼び出し
		contactDao.update(contact);

		return resultMap;
	}	

	/**
	 * DBアクセス後の出力データ処理を行う。主にDBアクセス結果からOutputDTOへの詰替処理を行う。
	 * @param resultMap persistメソッドからの持ち回りデータを格納したMapオブジェクト
	 * @return OutputDTO
	 * @throws ServiceDBException
	 * @throws ServiceAppException
	 */
	 	protected UpdateContactOutputDTO processOutput(Map<String, Object> resultMap)  throws ServiceDBException, ServiceAppException {

		return new UpdateContactOutputDTO();
		
	}}