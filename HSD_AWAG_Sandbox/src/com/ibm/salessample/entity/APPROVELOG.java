/** Generated by AWAG ver.2.0.0.GIT-e0917bf.BUILD-20170421-1451+0900 */

package com.ibm.salessample.entity;

import static com.ibm.jp.awag2.common.util.TextUtility.emptyStringToNull;

import java.sql.Timestamp;
import java.util.List;

import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.Version;

import com.ibm.jp.awag2.common.entity.EntityBase;
import com.ibm.jp.awag2.common.entity.ResourceVersionNotlockImpl;
import com.ibm.jp.awag2.common.entity.ResourceVersionLongImpl;
import com.ibm.jp.awag2.common.entity.ResourceVersionTimestampImpl;

/**
 * 承認履歴のEntityクラス。
 *
 */
@Entity
@Access(AccessType.PROPERTY)
@Table(name = "approvelog")
public class APPROVELOG extends EntityBase <APPROVELOGPK, Timestamp> {

	/** 主キー */
	private APPROVELOGPK pk = new APPROVELOGPK();
	
	/** 承認者ID(APPROVER) */
	private String approver;
	
	/** コメント(COMMENT) */
	private String comment;
	
	/** お客様ランク(RANK) */
	private String rank;
	
	/** ステータス(STATUS) */
	private String status;
	
	/** 承認フラグ(FLAG) */
	private String flag;
	
	/** 更新日付(VERSION) */
	private String _version;
	

	/**
	 * デフォルト・コンストラクタ。
	 */
	public APPROVELOG() {
		super();
		super._resourceVersion = new ResourceVersionTimestampImpl();
	}

	/**
	 * Entityのフィールド値を指定してインスタンスを初期化する。
	 * @param customerid お客様番号
	 * @param approver 承認者ID
	 * @param comment コメント
	 * @param rank お客様ランク
	 * @param status ステータス
	 * @param flag 承認フラグ
	 * @param version 更新日付
	 */
	public APPROVELOG (String customerid, String approver, String comment, String rank, String status, String flag, String version) {
		super._resourceVersion = new ResourceVersionTimestampImpl();
		
		this.setCUSTOMERID(customerid);
		this.setAPPROVER(approver);
		this.setCOMMENT(comment);
		this.setRANK(rank);
		this.setSTATUS(status);
		this.setFLAG(flag);
		this.setVERSION(version);
	}

	/**
	 * 主キーを取得する。
	 * @return 主キーオブジェクト
	 */
	@EmbeddedId
	@Override
	public APPROVELOGPK getPk() {
		return this.pk;
	}

	/**
	 * 主キーを設定する。
	 * @param 主キーオブジェクト
	 */
	@Override
	public void setPk(APPROVELOGPK pk) {
		this.pk = (APPROVELOGPK) pk;
	}

	/**
	 * CUSTOMERIDを取得する。
	 * @return CUSTOMERID
	 */
	@Transient	
	public String getCUSTOMERID() {
		return this.pk.getCUSTOMERID();
	}

	/**
	 * お客様番号を設定する。
	 * @param CUSTOMERID
	 */
	public void setCUSTOMERID(String customerid) {
		this.pk.setCUSTOMERID(emptyStringToNull(customerid));
	}

	/**
	 * APPROVERを取得する。
	 * @return APPROVER
	 */
	@Column(name = "approver")
	public String getAPPROVER() {
		return this.approver;
	}

	/**
	 * 承認者IDを設定する。
	 * @param APPROVER
	 */
	public void setAPPROVER(String approver) {
		this.approver = emptyStringToNull(approver);
	}

	/**
	 * COMMENTを取得する。
	 * @return COMMENT
	 */
	@Column(name = "comment")
	public String getCOMMENT() {
		return this.comment;
	}

	/**
	 * コメントを設定する。
	 * @param COMMENT
	 */
	public void setCOMMENT(String comment) {
		this.comment = emptyStringToNull(comment);
	}

	/**
	 * RANKを取得する。
	 * @return RANK
	 */
	@Column(name = "rank")
	public String getRANK() {
		return this.rank;
	}

	/**
	 * お客様ランクを設定する。
	 * @param RANK
	 */
	public void setRANK(String rank) {
		this.rank = emptyStringToNull(rank);
	}

	/**
	 * STATUSを取得する。
	 * @return STATUS
	 */
	@Column(name = "status")
	public String getSTATUS() {
		return this.status;
	}

	/**
	 * ステータスを設定する。
	 * @param STATUS
	 */
	public void setSTATUS(String status) {
		this.status = emptyStringToNull(status);
	}

	/**
	 * FLAGを取得する。
	 * @return FLAG
	 */
	@Column(name = "flag")
	public String getFLAG() {
		return this.flag;
	}

	/**
	 * 承認フラグを設定する。
	 * @param FLAG
	 */
	public void setFLAG(String flag) {
		this.flag = emptyStringToNull(flag);
	}

	/**
	 * VERSIONのDB値を取得する。
	 * @return VERSIONのDB値
	 */
	@Version
	@Column(name = "version")
	public Timestamp getVERSION_db() {	
		return super.get_resourceVersion();
	}

	/**
	 * 更新日付の文字列表記を取得する。
	 * @return VERSIONの文字列表記
	 */
	@Transient	
	public String getVERSION() {
		return super.get_resourceVersionString();
	}

	/**
	 * 更新日付のDB値を設定する。
	 * @param VERSIONのDB値
	 */
	public void setVERSION_db(Timestamp version) {
		super.set_resourceVersion(version);
	}

	/**
	 * 更新日付の文字列表記を設定する。
	 * @param VERSIONの文字列表記
	 */
	public void setVERSION(String version) {
		super.set_resourceVersionString(emptyStringToNull(version));
	}


}