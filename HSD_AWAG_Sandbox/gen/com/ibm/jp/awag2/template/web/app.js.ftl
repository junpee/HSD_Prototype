<#--
Automated web application generator

Licensed Materials - Property of IBM
"Restricted Materials of IBM"
IPSC : 6949-63S
(C) Copyright IBM Japan, Ltd. 2016 All Rights Reserved.
(C) Copyright IBM Corp. 2016 All Rights Reserved.
US Government Users Restricted Rights -
Use, duplication or disclosure restricted
by GSA ADP Schedule Contract with IBM Corp.
 -->
/** Generated by AWAG ver.${AWAGversion} at ${.now?iso_local} **/
'use strict';

var contextRoot = "/api";

var MSG_SEARCH_204 = '対象のデータがありません。検索条件を見直してください。';
var MSG_GET_204 = '対象のデータを取得できませんでした。';

var app = angular.module('awag', ['ngRoute', 'awag.common',
  <#list project.usecases as usecase>'awag.${usecase.usecaseName?lower_case}'<#sep>,</#list>
  ])
    /**
     * routing for home
     **/
    .config(['$routeProvider', function($routeProvider) {
        $routeProvider
            .when('/home', {
                controller: 'HomeCtrl as home',
                templateUrl: 'awag/home.html'
            })
            .otherwise({
                controller: 'HomeCtrl as home',
                redirectTo: '/home'
            });
    }]);

/**
 * controller for home page
 **/
app.controller('HomeCtrl', ['$scope', '$window', 'Context', function($scope, $window, Context) {
    $window.document.title = "${project.appName}";
    this.message = Context.message;

    this.start = function() {
        delete Context.error;
        delete Context.nextModel;
        Context.vModels = {};

<#if project.designType == "DEFAULT">
        if (document.getElementsByClassName('mdl-layout__drawer')[0].getAttribute('aria-hidden') == "false") {
            document.querySelector('.mdl-layout').MaterialLayout.toggleDrawer();
        }
</#if>
    };

<#if project.designType == "DEFAULT">
    //for material design light
    componentHandler.upgradeDom();
</#if>
}]);

/**
 * work-aroud to make material design light fields work
 **/
var MKDT = function makeDirty() {

<#if project.designType == "DEFAULT">
    //for material design light
    componentHandler.upgradeDom();

    var elements = document.getElementsByClassName("mdl-textfield__input");
    for (var i = 0; i < elements.length; i++) {
        if (elements[i].value == null || elements[i].value.length == 0) {
            if (elements[i].parentNode.classList.contains('is-invalid')) {
                (elements[i].parentNode.classList.remove('is-invalid'));
            }
        }
    }
</#if>
}

/**
 * reset radio and checkbox without "option-AndOr"
 **/
var RSCKD = function resetChecked() {
<#if project.designType == "DEFAULT">
    var elements = document.getElementsByClassName("mdl-radio__button");
    for (var i = 0; i < elements.length; i++) {
        if (elements[i].name != "option-AndOr") {
            (elements[i].parentNode.classList.remove('is-checked'));
        } else {
            if (elements[i].id == "option-And") {
                elements[i].click();
            }
        }
    }
    var elements = document.getElementsByClassName("mdl-checkbox__input");
    for (var i = 0; i < elements.length; i++) {
        (elements[i].parentNode.classList.remove('is-checked'));
    }
</#if>
}

/**
 * show loading image
 **/
function showLoading() {
<#if project.designType == "DEFAULT">
    document.getElementById("spinner").classList.add('is-active');
<#elseif project.designType == "SIMPLE">
    document.getElementById("spinner").innerHTML="通信中";
</#if>
}
/**
 * hide loading image
 **/
function hideLoading() {
<#if project.designType == "DEFAULT">
    document.getElementById("spinner").classList.remove('is-active');
<#elseif project.designType == "SIMPLE">
    document.getElementById("spinner").innerHTML="";
</#if>
}
